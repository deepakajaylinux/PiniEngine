.. PiniEngine documentation master file, created by
   sphinx-quickstart on Wed Dec 10 17:29:29 2014.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

.. raw:: html

    <script src="../../_static/zeroclipboard/ZeroClipboard.js"></script>
    <script src="../../_static/copyClipboard.js"></script>

기본 문법
**************************************

본 페이지에서는 LNX 스크립트의 기본적인 문법과 특징들에 대해 설명합니다.

매크로
=======================================
LNX 스크립트 매크로의 개념은 `기존 프로그래밍 언어에 존재하는 개념인 함수 <http://ko.wikipedia.org/wiki/%ED%95%A8%EC%88%98_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)>`_ 와 유사합니다.

해당 문서에선 어떤 매크로를 설명할때 대략적으로 아래와 같은 모습을 취하고 있습니다.

.. function:: [이미지 아이디,파일명,위치="화면중앙",효과="업페이드",효과시간=1,크기="원본크기",북마크이동="",스크린샷노출="예",GUI="아니오"]

여기서 매크로의 원형에 해당되는 "[이미지 아이디,파일명,위치="화면중앙",효과="업페이드",효과시간=1,크기="원본크기",북마크이동,스크린샷노출="예",GUI="아니오"]" 이 부분에 대해서 좀더 자세히 설명을 드리겠습니다.
여기서 매개변수 ``아이디`` 와 ``파일명`` 같은 경우 아래에도 표시과 되어 있듯이 매크로 호출시 필수적으로 전달해야만 하는 매개변수 입니다. 하지만 그외 ``위치`` 나 ``효과`` 와 같이 선택적으로 전달할 수 있는 매개변수의 경우 사용자가 매크로 호출시 매개변수를 전달해주지 않았다면 피니엔진이 기본적으로 설정한 기본 매개변수를 전달하여 호출하게 됩니다. 그러니까 아래 표시된 것 같이 ``위치`` 는 "화면중앙", ``효과`` 는 "업페이드" 가 기본 매개변수 입니다.

.. function:: 매개변수 설명

   :param 문자열 아이디: ( **필수** ) 해당 이미지를 지칭하는 고유 아이디입니다.

   :param 문자열 파일명: ( **필수** ) 보여질 이미지의 확장자를 포함한 파일명을 전달해야 합니다.

   :param 위치: 이미지의 위치를 전달해야 합니다.
   :type 위치: :ref:`자료형_위치`

   :param 효과: 자료형 :ref:`자료형_노드입장효과` 를 사용하여 이미지가 나타날때의 효과를 정할수 있습니다.
   :type 효과: :ref:`자료형_노드입장효과`

매크로 호출
---------------------------------------
어떠한 매크로를 호출하고 싶다면 매크로의 이름을 대괄호로 묶고 해당 매크로에 필수적으로 필요한 매개변수와 사용자의 필요에 의해 그 외의 매개변수를 "매개변수 이름=매개변수 값"의 형태로 전달해주어야 합니다.
 
피니엔진에서 제공하는 기본 매크로 중 :ref:`매크로_텍스트` 를 호출하는 예를 아래에서 간단하게 보여 드리겠습니다.

매크로의 특징
---------------------------------------
ㅁㄴㅇㄻㄴㅇㄻㄴㅇㄻㄴㅇㄹ

매크로 매개변수 속성
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
매크로를 호출하기 위해선 해당 매크로가 필요로 하는 매개변수를 전달 해주어야만 합니다.
이에 

| 이 라인은
| 부러져 있습니다 그러나
| 정확히는

매크로 호출시 매개변수의 순서
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
매크로 호출시 매개변수를 넘기는 순서는 자유롭게 하여도 정상적으로 동작합니다.
즉 아래와 같이해도 두 줄의 스크립트는 동일하게 동작하게 됩니다.

.. raw:: html

    <button id="syntax-keep-property-example">예제 복사하기</button>

    <script>
        code = "[텍스트 텍스트=\"좌우 흔들기\" 색상=\"255,0,0\" 크기=45]\n\n[텍스트 크기=45 텍스트=\"좌우 흔들기\" 색상=\"255,0,0\"]";
        
        copyClipboard("syntax-keep-property-example",code);
    </script>

.. image:: http://i.imgur.com/BTQeoz8.png
    :scale: 100%

매크로 매개변수 유지 특징
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
모든 매크로는 어떠한 매개변수가 전달되어 호출됬을 경우 해당 매개변수를 모두 계속 기억하고 있는 특징을 가지고 있습니다. 아래와 같은 예를 봅시다.

.. raw:: html

    <button id="syntax-keep-property-example">예제 복사하기</button>

    <script>
        code = "[대화 이름=\"멍구\"]\n;킁..\n[대화]\n;킁킁..?\n[대화]\n;여기가 어디지?";
        
        copyClipboard("syntax-keep-property-example",code);
    </script>

.. image:: http://i.imgur.com/26MiUBX.png
    :scale: 100%

.. image:: http://i.imgur.com/C6NwLZY.gif
    :scale: 100%

위 예제에선 대화 매크로를 이용하여 멍구라는 캐릭터가 대사를 치는 장면이 나옵니다.
만약에 연속으로 "멍구"라는 이름의 캐릭터가 계속 대화를 하여야 한다면 위처럼 최초의
대화 매크로 호출시에만 ``이름`` 매개변수에 "멍구"라는 값을 전달하여 주면 됩니다.
물론 매번 전달하여도 상관 없습니다. 또한 이러한 특성은 다른 매크로의 모든 매개변수에도 똑같이 적용됩니다.

이렇듯 매개변수가 유지가 되는 특성을 이용하여 스크립트를 좀 더 보기 쉽거나 짧게 작성할수 있습니다.

.. note::
    만약 이렇게 기억된 매개변수를 모두 지우고 기본 매개변수 기억하고 있는 초기의 상태로 돌아가고 싶을 경우 :ref:`매크로_인자변수초기화` 를 호출하면 됩니다.


----------

사용자 매크로
=======================================

매크로 선언 및 정의
---------------------------------------
ㅁㄴㅇㄻㄴㅇㄻㄴㅇㄻㄹㄴㅇ

기본 매개변수
---------------------------------------
ㅁㄴㅇㄻㄴㅇㄻㄴㅇㄻㄴㄴㅇㄹ