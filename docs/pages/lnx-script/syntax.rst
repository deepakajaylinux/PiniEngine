.. PiniEngine documentation master file, created by
   sphinx-quickstart on Wed Dec 10 17:29:29 2014.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

.. raw:: html

    <script src="../../_static/zeroclipboard/ZeroClipboard.js"></script>
    <script src="../../_static/copyClipboard.js"></script>

.. _LNX_스크립트_기본문법:

기본 문법
**************************************

.. contents:: 목차

본 페이지에서는 LNX 스크립트의 기본적인 문법과 특징들에 대해 설명합니다.

매크로
=======================================
LNX 스크립트 매크로의 개념은 `기존 프로그래밍 언어에 존재하는 개념인 함수 <http://ko.wikipedia.org/wiki/%ED%95%A8%EC%88%98_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)>`_ 와 유사합니다.

간단하게 설명하자면 매크로는 명령들의 집합 즉, 여러 명령들을 묶어 놓은 것이라고 볼 수 있습니다.
반복적으로 쓰이는 여러줄의 스크립트가 있을 경우 이를 매크로로 묶은 후 이 매크로를 호출한다면 더욱 스크립팅이 편리하고 스크립트 코드 또한 짧고 깔끔하게 유지될 수 있을것 입니다.

매크로 호출
---------------------------------------
어떠한 매크로를 호출하고 싶다면 매크로의 이름을 대괄호로 묶고 해당 매크로에 필수적으로 필요한 매개변수와 사용자의 필요에 의해 그 외의 매개변수를 "매개변수 이름=매개변수 값"의 형태로 전달해주어야 합니다.
 
피니엔진에서 제공하는 기본 매크로 중 :ref:`매크로_텍스트` 를 호출하는 예를 아래에서 간단하게 보여 드리겠습니다.

매크로의 특징
---------------------------------------
매크로에는 아래와 같은 몇가지 특징이 있습니다.
이는 :ref:`문법_사용자정의매크로` 에도 동일하게 적용됩니다.

.. _문법_확장인자:

매크로 확장인자
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
매크로 확장인자는 일반 매개변수와는 다른 조금은 특별한 매개변수의 한 종류입니다. 현재 :ref:`매크로_대화` , :ref:`매크로_독백` 와 같은 매크로가 확장인자를 전달받고 있습니다.
확장인자는 매크로 바로 아랫줄에 세미콜론을 이어가며 사용하게 됩니다. 아래 사진에선 샘플 '집나간 멍구'에서 사용된 :ref:`매크로_독백` 을 예로 들어 어떠한 독백 지문 텍스트를 확장인자로 전달받는 과정을 보여주고 있습니다.

.. raw:: html

    <button id="syntax-extension-parameter-example">예제 복사하기</button>

    <script>
        code = "[독백]\n;표정이 안좋을 수밖에.. 지금 유진이의 상태는 최악이다.\n;어제 그녀가 기르던 애완견 멍구가 집을 나갔다고 한다. \n;\n;그녀의 아버지가 환기를 시키겠다고 잠깐 문을 열어둔 사이 밖으로 나가버린 것이다.\n;밤새 기다려보았지만 멍구는 돌아오지 않았다고 한다.";
        
        copyClipboard("syntax-extension-parameter-example",code);
    </script>

.. image:: http://i.imgur.com/k1Ld3RJ.png
    :scale: 100%

매크로 인자변수
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
매크로 인자변수란 어떠한 매크로가 가지고 있는 매개변수에 대하여 호출하기 전에 미리 정해주어 매크로의 상태로서 그 값을 지니는 것을 말합니다.
"(매크로 이름).(매개변수 이름) = (매개변수 값)" 와 같은 형태로 인자 변수의 값을 대입할 수 있습니다. 아래 사진에서 보이는 예제에선 2번째 라인부터 8번째 라인까지와 11번째 라인과 동일하게 동작합니다. 그리고 :ref:`문법_사용자정의매크로` 또한 매크로 인자변수를 가질수 있습니다.

.. raw:: html

    <button id="syntax-parameter-variable-example">예제 복사하기</button>

    <script>
        code = "# 매크로 인자변수를 이용하여 호출\n대화창수정.아이디 = \"대화\"\n대화창수정.이미지 = \"textArea.png\"\n대화창수정.색상     = \"255,255,255,255\"\n대화창수정.위치     = \"0,720\"\n대화창수정.영역     = \"1070,200\"\n대화창수정.여백     = \"100,60\"\n[대화창수정]\n\n# 매크로 호출\n[대화창수정 아이디=\"대화\" 이미지=\"textArea.png\" 색상=\"255,255,255,255\" 위치=\"0,720\" 영역=\"1070,200\" 여백=\"100,60\" ]";
        
        copyClipboard("syntax-parameter-variable-example",code);
    </script>

.. image:: http://i.imgur.com/ORFIcjl.png
    :scale: 100%

.. seealso::
    :ref:`매크로_인자변수초기화` 가 호출되기 전까지는 모든 매크로는 매크로 인자변수에 대입된 값들을 계속 유지하게 됩니다.


매크로 호출시 매개변수의 순서
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
매크로 호출시 매개변수를 넘기는 순서는 자유롭게 하여도 정상적으로 동작합니다.
즉 아래와 같이해도 두 줄의 스크립트는 동일하게 동작하게 됩니다.

.. raw:: html

    <button id="syntax-parameter-order-example">예제 복사하기</button>

    <script>
        code = "[텍스트 텍스트=\"좌우 흔들기\" 색상=\"255,0,0\" 크기=45]\n\n[텍스트 크기=45 텍스트=\"좌우 흔들기\" 색상=\"255,0,0\"]";
        
        copyClipboard("syntax-parameter-order-example",code);
    </script>

.. image:: http://i.imgur.com/BTQeoz8.png
    :scale: 100%

매크로 매개변수 유지 특징
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
모든 매크로는 어떠한 매개변수가 전달되어 호출됬을 경우 해당 매개변수를 모두 계속 기억하고 있는 특징을 가지고 있습니다. 아래와 같은 예를 봅시다.

.. raw:: html

    <button id="syntax-keep-property-example">예제 복사하기</button>

    <script>
        code = "[대화 이름=\"멍구\"]\n;킁..\n[대화]\n;킁킁..?\n[대화]\n;여기가 어디지?";
        
        copyClipboard("syntax-keep-property-example",code);
    </script>

.. image:: http://i.imgur.com/ixmWvfT.png
    :scale: 100%

.. image:: http://i.imgur.com/C6NwLZY.gif
    :scale: 100%

위 예제에선 대화 매크로를 이용하여 멍구라는 캐릭터가 대사를 치는 장면이 나옵니다.
만약에 연속으로 "멍구"라는 이름의 캐릭터가 계속 대화를 하여야 한다면 위처럼 최초의 대화 매크로 호출시에만 ``이름`` 매개변수에 "멍구"라는 값을 전달하여 주면 됩니다. 물론 매번 전달하여도 상관 없습니다. 또한 이러한 특성은 다른 매크로의 모든 매개변수에도 똑같이 적용됩니다.

이렇듯 매개변수가 유지가 되는 특성을 이용하여 스크립트를 좀 더 보기 쉽거나 짧게 작성할수 있습니다.

.. note::
    만약 이렇게 기억된 매개변수를 모두 지우고 기본 매개변수 기억하고 있는 초기의 상태로 돌아가고 싶을 경우 :ref:`매크로_인자변수초기화` 를 호출하면 됩니다.


----------

.. _문법_사용자정의매크로:

사용자 정의 매크로
=======================================

매크로 선언 및 정의
---------------------------------------
피니엔진이 기본으로 제공하느 매크로 외에 사용자가 직접 매크로를 만들어서 사용할 수 있습니다. 아래와 같이 "@매크로 매크로명:"을 시작으로 다음 줄부터 탭 한칸으로 시작하여 작성하고 싶은 스크립트를 작성하면 됩니다.

.. raw:: html

    <button id="syntax-custom-macro-example">예제 복사하기</button>

    <script>
        code = "@매크로 피니대화창_색상변경:\n\t[대화창수정 아이디=\"피니\" 이미지=\"textArea.png\" 색상=피니대화창_색상변경.대화창색상]\n\t[효과음 아이디=\"왈\" 파일명=\"으르르.mp3\" ]\n\t\n[피니대화창_수정 대화창색상=\"0,0,0,255\"]";
        
        copyClipboard("syntax-custom-macro-example",code);
    </script>

.. image:: http://i.imgur.com/i5mSAHW.png
    :scale: 100%

매개변수
---------------------------------------
매개변수란 정의된 매크로가 호출될때 외부에서 받을수 있는 입력 값을 뜻합니다.

기본 매개변수
---------------------------------------
사용자 매크로를 선언할 때 기본 매개변수를 지정해 줄 수 있습니다.

즉, 어떠한 매크로가 기본 매개변수를 가지고 있다면 그 매크로를 호출할땐 최소한 
기본 매개변수를 제외한 필수 매개변수를 전달 해주어야 합니다.

----------

.. _문법_변수:

변수
=======================================
LNX스크립트에는 프로그래밍 언어에서 대개 지원하는 변수의 개념을 가지고 있습니다.
변수는 어떠한 값을 보관하고 연산의 대상이 됩니다. 또한 매크로의 매개변수로 활용 될 수 있습니다.

변수의 선언
---------------------------------------
한글과 영어 그리고 숫자를 섞어서 변수의 이름을 만들수 있습니다.
다만 변수의 이름은 숫자로 시작 할 수 없고 숫자만으로 이루어진 것 또한 변수의 이름이 될 수 없습니다.
변수의 선언은 비어있는 줄에 변수의 이름을 쓰기만 하면 됩니다.
하지만 대입이 없는 변수의 선언은 그다지 의미있는 스크립트가 아닙니다. 이와 같은 것이 있다는 것만 아셔도 충분합니다.
또한 LNX스크립트에선 한줄에 하나의 변수 선언만 가능하며 변수 대입 또한 이와 같습니다.

변수의 대입
---------------------------------------
변수의 대입은 변수의 선언과 동시에 이루어질수 있습니다. 대입은 등호(=)를 사용합니다.
변수의 대입은 (변수이름=값)의 형태로 이루어 집니다. 어떠한 변수에 대입이 이루어 지면 해당 변수는
대입이 이루어졌을 때 전달된 값을 계속 보관하고 있게 됩니다.

변수의 사칙연산
---------------------------------------
기본적으로 숫자가 대입된 변수에 한하여 대하여 덧셈(+),뺄셈(-),곱셈(*),나눗셈(/)과 같은 사칙연산이 가능합니다.

문자열 변수의 병합
---------------------------------------
덧셈(+) 기호를 사용하여 문자열 변수와 다른 문자열 혹은 다른 문자열 변수와 병합할 수 있습니다. 하지만 반대의 경우로 뺄셈(-)은 되지 않습니다.

.. raw:: html

    <button id="syntax-string-merge">예제 복사하기</button>

    <script>
        code = "A = \"abc\"\n\nA = A + \"123\" # \"abc123\"";
        
        copyClipboard("syntax-string-merge",code);
    </script>

.. image:: http://i.imgur.com/J4HwxwW.png
    :scale: 100%

위의 예제와 같이 "abc"라는 문자열이 보관된 변수 A에 "123"을 덧셈하여 변수 A에 다시 
대입을 한다면 변수 A에는 "abc123" 이라는 문자열이 보관되게 됩니다.

변수의 형변환
---------------------------------------
변수의 형변환이란 

----------

비교 연산자
=======================================
비교 연산자는 어떠한 변수나 값을 서로 비교하기 위해 쓰이는 연산자 입니다.
주로 :ref:`문법_조건문` 에 쓰이게 됩니다.

* ==
    좌우로 어떤 변수나 숫자,문자열 같은 값을 놓아 서로 같은지 비교합니다.
    같으면 참 같지 않은면 거짓입니다. :ref:`문법_조건문` 에서 쓰일 경우 참이면 그 아래에 있는 스크립트가 실행되게 됩니다.
* >,<
    좌우로 어떤 변수나 숫자,문자열 같은 값을 놓아 누가 더 큰지 비교합니다.
    >의 경우 좌측에 있는 것이 우측에 있는 것 보다 더 크면 참이고 <의 경우엔 우측에 있는 것이 좌측에 있는 것 보다 크면 참입니다.
    :ref:`문법_조건문` 에서 쓰일 경우 참이면 그 아래에 있는 스크립트가 실행되게 됩니다.

----------

.. _문법_조건문:

조건문
=======================================
:ref:`문법_변수` 를 활용해 조건문을 사용하면 어떠한 조건이 맞아 떨어졌을 경우 여러 분기로 실행지점을 나누거나
특정 스크립트를 수행하게끔 할 수 있습니다.

* @조건 (조건):
    기존 프로그래밍 언어에 대입하여 보았을때 if문이라고 볼 수 있습니다.
* @다른조건 (조건):
    기존 프로그래밍 언어에 대입하여 보았을때 else if문이라고 볼 수 있습니다.
* @그외:
    기존 프로그래밍 언어에 대입하여 보았을때 else문이라고 볼 수 있습니다.

아래의 예제를 통해 자세히 살펴 봅시다. 조건,다른조건,그외 모두 실행시키고 싶은 
스크립트를 그 다음줄에 한칸의 탭을 준 후 써야 합니다.

.. image:: http://i.imgur.com/LpvVSUm.png
    :scale: 100%


위와 같은 경우 변수 '사람'에는 문자열 "C" 라는 값이 있기 때문에 8번 라인에 C.mp3라는 음악 파일을 재생 시키는 효과음 함수가 호출되게 됩니다.
마찬가지로 변수 '사람'이 문자열 "A" 혹은 "B"라는 값을 보관하고 있었다면 각각 4번째 라인과 6번라인이 실행 되었을 겁니다.
그리고 마지막으로 '그외' 조건문은 말 그대로 변수 '사람'에 문자열 "A"나 "B" 나 "C"가 아닌 그외의 모든 경우에 들어오게 됩니다. 예를 들어 변수 '사람'에
문자열 "D"나 숫자 34와 같은 경우 10번째 라인이 실행되게 됩니다.

----------

북마크
=======================================
북마크를 사용하면 특정한 실행지점으로 이동할 수 있습니다.

기존 프로그래밍 언어에 대입하여 설명 드리자면 `goto문 <http://ko.wikipedia.org/wiki/Goto_%EB%AC%B8)>`_ 에 가까운 기능입니다.
북마크 선언을 통한 북마크 지점은 Label로 볼 수 있고 북마크 이동 기능은 goto 명령어라고 볼 수 있습니다.


북마크 선언과 북마크 이동
---------------------------------------
북마크 선언은 아래와 같이 :(콜론)과 원하는 북마크 이름을 적으면 됩니다.
또한 실행 시점을 원하는 특정 북마크로 이동하고 싶다면 >(부등호)와 원하는 북마크 이름을 적으면 됩니다.

.. raw:: html

    <button id="syntax-bookmark-example">예제 복사하기</button>

    <script>
        code = ":게임시작\n\n[이미지 아이디=\"멍구1\" 파일명=\"멍구1.png\"  크기=\"화면맞춤\" 효과=\"줌아웃페이드\"]\n\n[독백 이름=\"멍구\"]\n;왠지 킁킁거리고 싶어지는 걸?? <클릭>\n;내 이름은 멍구다. 킁킁거리길 제일 잘하지!<클릭>\n\n#게임시작으로 돌아가기\n>게임시작";
        
        copyClipboard("syntax-bookmark-example",code);
    </script>

.. image:: http://i.imgur.com/46aso1Q.png
    :scale: 100%

엔진상의 스크립트 에디터 창에선 위의 예제 사진에서 보이듯이 북마크 선언 혹은 북마크 이동을 하는 스크립트가 있는 라인에 커서가 있으면 해당 북마크가 어디어디에 있는지 표시해 줍니다.